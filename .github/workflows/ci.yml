# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/
#
# This workflow uses actions that are not certified by GitHub. They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.
#
# This file contains the workflows that are run prior to merging a pull request.

name: CI

on:
  push:
    branches:
      - 'develop'
      - 'master'
  pull_request:
    branches:
      - 'develop'
      - 'master'

  # Allow manually triggering of the workflow.
  workflow_dispatch: {}

jobs:
  build_tests_xcore:
    name: Build tests (XCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Pull builder container
        run: |
          docker pull ghcr.io/xmos/sdk_app_builder:develop 

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy

      - name: Build
        run: |
          docker run --user $(id -u) --rm -w /lib_xs3_math -v ${{ github.workspace }}:/lib_xs3_math ghcr.io/xmos/sdk_app_builder:develop bash -l .github/scripts/build_tests_xcore.sh

      # - name: Save Unit Test Artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: path/to/artifact/world.txt

  build_tests_x86:
    name: Build & Run Tests (x86)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy
      
      - name: Build Tests
        working-directory: ~/
        run: |
          cd ~
          cmake -B build.x86 ${{ github.workspace }}
          cmake --build build.x86

      - name: "Run Tests: scalar_tests"
        working-directory: ~/
        run: ./build.x86/test/scalar_tests/scalar_tests -v

      - name: "Run Tests: vect_tests"
        working-directory: ~/
        run: ./build.x86/test/vect_tests/vect_tests     -v

      - name: "Run Tests: bfp_tests"
        working-directory: ~/
        run: ./build.x86/test/bfp_tests/bfp_tests       -v

      - name: "Run Tests: fft_tests"
        working-directory: ~/
        run: ./build.x86/test/fft_tests/fft_tests       -v

      - name: "Run Tests: filter_tests"
        working-directory: ~/
        run: ./build.x86/test/filter_tests/filter_tests -v

  build_documentation:
    name: Build and package documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Pull doc_builder container
        run: |
          docker pull ghcr.io/xmos/sdk_doc_builder:develop 
      
      - name: Build documentation
        run: |
          docker run --user $(id -u) --rm -w /lib_xs3_math/lib_xs3_math/doc -v ${{ github.workspace }}:/lib_xs3_math ghcr.io/xmos/sdk_doc_builder:develop make clean html linkcheck SPHINXOPTS="-W --keep-going"
          
      - name: Save documentation artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lib_xs3_math_docs
          path: ./lib_xs3_math/doc/_build/html
          retention-days: 5
